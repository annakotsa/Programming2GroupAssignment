/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javadevs;

import java.awt.event.KeyEvent;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author A
 */
public class JFrameView extends javax.swing.JFrame {
    LinkedList<LinkedList<String>> sublist = new LinkedList<>();
    JFrameList list = new JFrameList();
    
    LinkedList<LinkedList<String>> sublist2 = new LinkedList<LinkedList<String>>();

    /**
     * Creates new form JFrameView
     */
    public JFrameView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choice = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jReturn = new javax.swing.JButton();
        JOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        choice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "View the whole list", "View item by primary key", "View by item" }));
        choice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choiceActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel1.setText("Choose an option from below :");

        jReturn.setText("Return to basic menu");
        jReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jReturnActionPerformed(evt);
            }
        });
        jReturn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jReturnKeyPressed(evt);
            }
        });

        JOk.setText("OK");
        JOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JOkActionPerformed(evt);
            }
        });
        JOk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JOkKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jReturn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(choice, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(JOk)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(choice, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JOk)
                .addGap(23, 23, 23)
                .addComponent(jReturn)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void choiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceActionPerformed
        //
    }//GEN-LAST:event_choiceActionPerformed

    private void jReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jReturnActionPerformed
        JFrameView.this.setVisible(false);
        new JFrameMenu().setVisible(true);
    }//GEN-LAST:event_jReturnActionPerformed

    private void jReturnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jReturnKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            JFrameView.this.setVisible(false);
            new JFrameMenu().setVisible(true);
        }
    }//GEN-LAST:event_jReturnKeyPressed

    private void JOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JOkActionPerformed
        String itemSelected = choice.getSelectedItem() + "";
        
        if (itemSelected.equals("View the whole list")) {
            JFrameView.this.setVisible(false);
            new JFrameViewEverything().setVisible(true);
        } else if (itemSelected.equals("View item by primary key")){
            String pk = JOptionPane.showInputDialog("Type the primary key of the record you want to view");
            
            sublist = list.getList();
            int pos = -1;
            boolean found = false;
            int i = 0;
            while (i < sublist.get(0).size() & !found) {
                if (pk.equals(sublist.get(0).get(i))) {
                    found = true;
                    pos = i;
                }
                i++;
            }
            if (pos == -1) {
                JOptionPane.showMessageDialog(null, "There is no such record!");
            } else {
                JFrameView.this.setVisible(false);
                new JFrameViewByPrimKey(pos).setVisible(true);   
            }
            
        } else if (itemSelected.equals("View by item")){

            sublist = list.getList();
            for (int i = 0; i < sublist.size(); i++) {
                sublist2.add(new LinkedList<String>());
                sublist2.get(i).add(sublist.get(i).get(0));
            }
            
            String item = JOptionPane.showInputDialog("Please enter the item of the record you want to view");
            
            boolean found = false;
            for (int j = 0; j < sublist.size(); j++) {
              for (int k = 0; k < sublist.get(0).size(); k++) {
                if (sublist.get(j).get(k).equals(item)) {
                  for (int z = 0; z < sublist.size(); z++) {
                    sublist2.get(z).add(sublist.get(z).get(k));
                    found = true;
                  } //end of for(z)
                } //end of if
              } //end of for(k)
            } //end of for(j)

            if (!found) {
                JOptionPane.showMessageDialog(null, "There is no such record!");
            } else {
                JFrameView.this.setVisible(false);
                new JFrameViewByItem(sublist2).setVisible(true);
            }
            
        }
    }//GEN-LAST:event_JOkActionPerformed

    private void JOkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JOkKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            String itemSelected = choice.getSelectedItem() + "";
            if (itemSelected.equals("View the whole list")) {
                JFrameView.this.setVisible(false);
                new JFrameViewEverything().setVisible(true);
            } else if (itemSelected.equals("View item by primary key")){
                String pk = JOptionPane.showInputDialog("Type the primary key of the record you want to view :");

                sublist = list.getList();
                int pos = -1;
                boolean found = false;
                int i = 0;
                while (i < sublist.get(0).size() & !found) {
                    if (pk.equals(sublist.get(0).get(i))) {
                        found = true;
                        pos = i;
                    }
                    i++;
                }
                if (pos == -1) {
                    JOptionPane.showMessageDialog(null, "There is no such record!");
                } else {
                    JFrameView.this.setVisible(false);
                    new JFrameViewByPrimKey(pos).setVisible(true);   
                }
            } else if (itemSelected.equals("View by item")){
                sublist = list.getList();
                for (int i = 0; i < sublist.size(); i++) {
                    sublist2.add(new LinkedList<String>());
                    sublist2.get(i).add(sublist.get(i).get(0));
                }
            
                String item = JOptionPane.showInputDialog("Please enter the item of the record you want to view");

                boolean found = false;
                for (int j = 0; j < sublist.size(); j++) {
                  for (int k = 0; k < sublist.get(0).size(); k++) {
                    if (sublist.get(j).get(k).equals(item)) {
                      for (int z = 0; z < sublist.size(); z++) {
                        sublist2.get(z).add(sublist.get(z).get(k));
                        found = true;
                      } //end of for(z)
                    } //end of if
                  } //end of for(k)
                } //end of for(j)

                if (!found) {
                    JOptionPane.showMessageDialog(null, "There is no such record!");
                } else {
                    JFrameView.this.setVisible(false);
                    new JFrameViewByItem(sublist2).setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_JOkKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JOk;
    private javax.swing.JComboBox<String> choice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jReturn;
    // End of variables declaration//GEN-END:variables
}
