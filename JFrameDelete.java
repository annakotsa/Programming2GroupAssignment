/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javadevs;

import java.awt.event.KeyEvent;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author A
 */
public class JFrameDelete extends javax.swing.JFrame {
    LinkedList<LinkedList<String>> sublist = new LinkedList<>();
    JFrameList list = new JFrameList();

    /**
     * Creates new form JFrameDelete
     */
    public JFrameDelete() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jWhole = new javax.swing.JButton();
        jRecord = new javax.swing.JButton();
        jReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel1.setText("Choose an option from below:");

        jWhole.setText("Delete the whole base");
        jWhole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWholeActionPerformed(evt);
            }
        });
        jWhole.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jWholeKeyPressed(evt);
            }
        });

        jRecord.setText("Delete a specific record");
        jRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRecordActionPerformed(evt);
            }
        });
        jRecord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jRecordKeyPressed(evt);
            }
        });

        jReturn.setText("Return to basic menu");
        jReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jReturnActionPerformed(evt);
            }
        });
        jReturn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jReturnKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(117, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jWhole, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(128, 128, 128))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jWhole, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jReturn)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jWholeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWholeActionPerformed
        // TODO add your handling code here:
        sublist = list.getList();
        if (sublist.isEmpty()) {
            JOptionPane.showMessageDialog(null, "The DataBase is already empty");
        } else {
            String[] options = { "Yes", "No" };
            int x = JOptionPane.showOptionDialog(null, "Are you sure you want to delete the whole base?", "Delete the base", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
            if (x == 0){
                sublist.clear();
                list.setList(sublist);
            }   
        }
    }//GEN-LAST:event_jWholeActionPerformed

    private void jRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRecordActionPerformed
        // TODO add your handling code here:
        sublist = list.getList();
        int pos = -1;
	boolean found = false;
	int i = 0;
        if (sublist.indexOf(sublist.get(0).getLast())== 0) {
            JOptionPane.showMessageDialog(null, "The DataBase has no records");
        } else {
            String ans = JOptionPane.showInputDialog("Type the primary key of the record you want to delete");
            while (i < sublist.get(0).size() & !found) {
                  if (ans.equals(sublist.get(0).get(i))) {
                    found = true;
                    pos = i;
                  }
                  i++;
                }
            if (pos == -1) {
                String[] options = {"Yes", "No"};
                int x = JOptionPane.showOptionDialog(null, "There is no such record.Do you want to try again?", "Record not found", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                if (x == 0) {
                    jRecordActionPerformed(evt);
                }
            } else {
                for (int j = 0; j < sublist.size(); j++) {
                    sublist.get(j).remove(pos);
                }
            }
            list.setList(sublist);
        }
    }//GEN-LAST:event_jRecordActionPerformed

    private void jReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jReturnActionPerformed
        // TODO add your handling code here:
        JFrameDelete.this.setVisible(false);
        new JFrameMenu().setVisible(true);
    }//GEN-LAST:event_jReturnActionPerformed

    private void jReturnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jReturnKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            JFrameDelete.this.setVisible(false);
            new JFrameMenu().setVisible(true);
        }
    }//GEN-LAST:event_jReturnKeyPressed

    private void jWholeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jWholeKeyPressed
        // TODO add your handling code here:
        sublist = list.getList();
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            if (sublist.isEmpty()) {
            JOptionPane.showMessageDialog(null, "The DataBase is already empty");
            } else {
                String[] options = { "Yes", "No" };
                int x = JOptionPane.showOptionDialog(null, "Are you sure you want to delete the whole base?", "Delete the base", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                if (x == 0){
                    sublist.clear();
                    list.setList(sublist);
                    int restart = JOptionPane.showOptionDialog(null, "Do you want to create a new data base?", null, JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                    if (restart == 0) {
                        JFrameDelete.this.setVisible(false);
                        new JFrame1().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_jWholeKeyPressed

    private void jRecordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRecordKeyPressed
        // TODO add your handling code here:
        sublist = list.getList();
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            String ans = JOptionPane.showInputDialog("Type the primary key of the record you want to delete");
        int pos = -1;
	boolean found = false;
	int i = 0;
        while (i < sublist.get(0).size() & !found) {
	      if (ans.equals(sublist.get(0).get(i))) {
	        found = true;
	        pos = i;
	      }
	      i++;
	    }
        if (pos == -1) {
            String[] options = {"Yes", "No"};
            int x = JOptionPane.showOptionDialog(null, "There is no such record.Do you want to try again?", "Record not found", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
            if (x == 0) {
                jRecordKeyPressed(evt);
            }
        } else {
            for (int j = 0; j < sublist.size(); j++) {
	        sublist.get(j).remove(pos);
	    }
        }
        list.setList(sublist);
        }
    }//GEN-LAST:event_jRecordKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameDelete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jRecord;
    private javax.swing.JButton jReturn;
    private javax.swing.JButton jWhole;
    // End of variables declaration//GEN-END:variables
}
